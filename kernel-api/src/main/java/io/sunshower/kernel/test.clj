(ns io.sunshower.kernel.test)



(defmethod compute ((graph graph))
           (let ((index (make-hash-table))
                 (lowlink (make-hash-table))
                 (counter 0) stack sccs)
                (labels ((compute-components (node)
                                             (setf (gethash node index) counter)
                                             (setf (gethash node lowlink) counter)
                                             (incf counter)
                                             (push node stack)
                                             (mapc (lambda (neighbor)
                                                           (cond
                                                             ((not (gethash neighbor index))
                                                              (compute-components neighbor)
                                                              (setf (gethash node lowlink)
                                                                    (min (gethash node lowlink)
                                                                         (gethash neighbor lowlink))))
                                                             ((member neighbor stack)
                                                              (setf (gethash node lowlink)
                                                                    (min (gethash node lowlink)
                                                                         (gethash neighbor index))))))
                                                   (neighbors graph node))
                                             (when (= (gethash node index) (gethash node lowlink))
                                                   (push (loop :for v = (pop stack) :collect v :until (eq v node))
                                                         sccs))))
                        (mapc (lambda (node) (unless (gethash node index) (compute-components node)))
                              (nodes graph)))
                sccs))
