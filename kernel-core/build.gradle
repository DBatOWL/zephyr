plugins {
    id 'net.nemerosa.versioning' version '2.8.2'
}

apply plugin: 'pmd'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'java-library'
apply plugin: 'com.github.spotbugs'

configurations {
    bundle
}

publishing {
    publications {

        applicationTar(MavenPublication) {
            from components.java
            artifact source: distTar, classifier: 'tar', extension: 'tar'
        }
        applicationZip(MavenPublication) {
            from components.java
            artifact source: distZip, classifier: 'zip', extension: 'zip'
        }
    }
}
dependencies {

    /**
     * API Dependencies
     */
    api 'com.google.dagger:dagger'


    /**
     * Implementation Dependencies
     */

    [
            'com.google.dagger:dagger',
            project(':kernel-api'),
            'info.picocli:picocli',
            project(':kernel-gyre:gyre-api'),
            project(':kernel-modules:kernel-lib')
    ].each {
        bundle it
        implementation it
    }


    /**
     * Test Dependencies
     */



    testImplementation project(':kernel-gyre:gyre-api')
    testImplementation 'org.jboss.modules:jboss-modules'
    testImplementation project(':kernel-modules:kernel-lib')
    testImplementation project(':kernel-tests:kernel-test-common')


    /**
     * Annotation Processors
     */

    annotationProcessor 'com.google.dagger:dagger-compiler'

}
jar {
    manifest {
        attributes(
                'Kernel-Version': project.version,
                'Built-By': System.properties['user.name'],
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Revision': versioning.info.commit,
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk':
                        "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})"
                ,
                'Build-OS':
                        "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

application {
    applicationName = 'zephyr'
    mainClassName = 'io.zephyr.kernel.launch.KernelLauncher'
}



